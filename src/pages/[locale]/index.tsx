'use client';

import { getStaticPaths, makeStaticProps } from '../../lib/getStatic'
import Link from 'next/link'
import Head from 'next/head'
import { useTranslation } from 'next-i18next'
import { useRouter } from 'next/router'
import LanguageSwitchLink from '@/components/LanguageSwitch/LanguageSwitch'
import { Alert, Button } from 'flowbite-react';
import { HiOutlineArrowRight } from 'react-icons/hi';
import Main from '@/components/Main';
import ArrowLink from '@/components/links/ArrowLink';
const { i18n } = require('../../../next-i18next.config.js')

const Homepage = () => {
  const router = useRouter()
  const { t } = useTranslation(['common', 'footer', 'index'])
  const currentLocale =
    router.query['locale'] || i18n.defaultLocale


  return (
    <>
      <Head>
        <title>{t('title')}</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main>
        <h1>{t('h1')}</h1>
        <h3 className='mt-4'>Next.js + Tailwind CSS + TypeScript Starter</h3>
        <p className='mt-2 text-sm text-gray-800'>
          A starter for Next.js, Tailwind CSS, and TypeScript with Absolute
          Import, Seo, Link component, pre-configured with Husky{' '}
        </p>
        <p className='mt-2 text-sm text-gray-700'>
          <ArrowLink href='https://github.com/theodorusclarence/ts-nextjs-tailwind-starter'>
            See the repository
          </ArrowLink>
        </p>
        <Main></Main>
        <Alert color="info">Alert!</Alert>
        <div>
          <Link href="/second-page">
            <Button color="dark">
              {t('to-second-page')}
              <HiOutlineArrowRight className="ml-2 h-5 w-5" />
            </Button>
          </Link>
        </div>
      </main>
      <footer>
        <p>{t('footer:description')}</p>
        <p>{t('footer:change-locale')}</p>

        {i18n.locales.map((locale: any) => {
          if (locale === currentLocale) return null
          return <LanguageSwitchLink locale={locale} key={locale} />
        })}
      </footer>
    </>
  )
}

export default Homepage

const getStaticProps = makeStaticProps(['common', 'footer', 'index'])
export { getStaticPaths, getStaticProps }
